(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{214:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("javascript是弱语言，很多方面都没有强语言要求严格。作为语句结束符的"),a("code",[t._v(";")]),t._v("，也是可以省略不写的。但是有些时候，省略之后是会出现问题的，而一个由于 "),a("code",[t._v(";")]),t._v(" 引起的问题往往很难找到，所以为了预防这样的问题也好，规范代码的书写也罢，还是养成一个每句代码结束后加上结束符("),a("code",[t._v(";")]),t._v(")的习惯好。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n")])])]),a("p",[t._v("以上代码，乍看之下似乎没什么问题，除了最上面两行的声明与赋值之外，就是将数组a的每一项元素平方操作，然后通过数组解构赋值的方法给变量 "),a("code",[t._v("b")]),t._v(" 和 "),a("code",[t._v("c")]),t._v(" 分别赋值为数组 "),a("code",[t._v("a")]),t._v(" 的前两个元素。")]),t._v(" "),a("p",[t._v("但是运行起来就会发现\n"),a("img",{attrs:{src:"https://miao.su/images/2019/01/07/error875ae.png",alt:"运行报错"}})]),t._v(" "),a("p",[t._v("神马？！居然报错了？！")]),t._v(" "),a("p",[t._v("不要慌，来分析下报错信息："),a("code",[t._v("Cannot set property 'undefined' of undefined")]),t._v(" 无法在undefined上设置属性'undefined'。这种错误熟悉不熟悉？")]),t._v(" "),a("p",[t._v("很明显，这种错误一般发生在给对象添加属性，而要添加属性的对象却是一个undefined值的时候。")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("那么问题来了：我们什么时候进行了给对象添加属性的操作了呢？")])])]),t._v(" "),a("p",[t._v("先回想一下，给对象添加属性的方法，最常用的就是点语法了"),a("code",[t._v("object.someProperty")]),t._v(" ，另一种则是关联数组语法"),a("code",[t._v('object["someProperty"]')]),t._v(" ，当然，还有其他方法，比如"),a("code",[t._v("Object.defineProperty()")]),t._v(" 。")]),t._v(" "),a("p",[t._v("不过这里并不是要讨论这些，在看到关联数组语法的时候，有没有眼前一亮？没错，问题就出在这里。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n")])])]),a("p",[a("img",{attrs:{src:"https://miao.su/images/2019/01/07/ok11918.png",alt:"加上分号就没错了"}})]),t._v(" "),a("p",[t._v("那么原因呢？")]),t._v(" "),a("p",[t._v("JavaScript中之所以可以不加语句结束符，是因为你不加，系统会自动帮你加上。但是系统并不能知道你的一条完整语句具体到哪里结束，因此系统只能根据语句是否完整、能否继续等条件来判断。")]),t._v(" "),a("p",[t._v("很显然，"),a("code",[t._v("a.forEach()")]),t._v(" 这条遍历语句是完整的；但是在后面的数组解构依然可以跟它连起来成为一条对象属性的赋值语句，因此系统并没有在遍历语句结束时自动地加上语句结束符。")]),t._v(" "),a("p",[t._v("进行步骤的拆解的话，可以这么看，记住任何语句都是有返回值的，所以不妨将"),a("code",[t._v("a.forEach(...)")]),t._v(" 赋值一个临时变量，这样就可以更加清晰起来了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntemp\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n")])])]),a("p",[t._v("你可能会说，这种情况很少发生的啦。没错，确实很少发生，我也是在前几天做项目的时候才初次遇到这种因为一个分号引起的错误。因为项目中使用了eslint，要求在可以使用解构赋值的情况下，必须使用解构赋值，不然就会报错。然后最初是没有这项强制要求的，而且有些人并不会特意去修改这些不影响实际代码运行的问题。而我在修改了之后才发现了这样的问题。但是我想说的是，除了这种数组解构赋值的情况，真的就没有其他情况了吗？并不是这样的吧。")]),t._v(" "),a("p",[t._v("比如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s1  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 => error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("s2  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 => error")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '12' => right")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际运行的是 +s1 + s2 => 1 + '2' => '12'")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("而且作为一个开发者，养成一个写规范代码的习惯还是很有好处的，至少我是这样认为的。")])])])},[],!1,null,null,null);s.default=e.exports}}]);